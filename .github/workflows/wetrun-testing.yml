name: Hippunfold PR Wet-Run

on:
  push:
    branches:
      - dev-v2.0.0
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'The Pull Request number to test'
        required: true
        default: '1'


env:
  OS_AUTH_URL:             ${{ secrets.OS_AUTH_URL }}
  OS_IDENTITY_API_VERSION: ${{ secrets.OS_IDENTITY_API_VERSION }}
  OS_INTERFACE:            ${{ secrets.OS_INTERFACE }}
  OS_PROJECT_DOMAIN_ID:   "${{ secrets.OS_PROJECT_DOMAIN_ID }}"
  OS_PROJECT_NAME:        "${{ secrets.OS_PROJECT_NAME }}"
  OS_USERNAME:            "${{ secrets.OS_USERNAME }}"
  OS_PASSWORD:            "${{ secrets.OS_PASSWORD }}"
  OS_PROJECT_ID:           ${{ secrets.OS_PROJECT_ID }}
  OS_REGION_NAME:         "${{ secrets.OS_REGION_NAME }}"
  OS_USER_DOMAIN_NAME:     ${{ secrets.OS_USER_DOMAIN_NAME }}

jobs:
  arbutus-test:
    runs-on: ubuntu-latest

    env:
      PR_NUMBER: ${{ github.event.inputs.pr_number }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-openstackclient jq gettext-base

    - name: Generate per-PR cloud-init
      run: |
        envsubst '${PR_NUMBER}' < cloud-init.yml \
          > cloud-init.generated.yml

    - name: Launch Arbutus VM for PR #${{ github.event.inputs.pr_number }}
      id: launch
      run: |
        openstack server create \
          --image "Ubuntu-22.04.4-Jammy-x64-2024-06" \
          --flavor c16-120gb-576 \
          --network def-akhanf-dev-network \
          --user-data cloud-init.generated.yml \
          hippunfold-pr-${PR_NUMBER}

        VM_ID=$(openstack server list \
          --name hippunfold-pr-${PR_NUMBER} \
          -f value -c ID)
        echo "vm_id=$VM_ID" >> $GITHUB_OUTPUT

    - name: Stream console logs until shutdown
      run: |
        for i in {1..60}; do
          openstack console log show ${{ steps.launch.outputs.vm_id }} | tail -n 50
          STATUS=$(openstack server show ${{ steps.launch.outputs.vm_id }} -f value -c status)
          echo "Status: $STATUS (poll #$i)"
          if [[ "$STATUS" =~ ^(SHUTOFF|SUSPENDED)$ ]]; then
            break
          fi
          sleep 10
        done

    - name: Delete Arbutus VM
      if: always()
      run: |
        openstack server delete ${{ steps.launch.outputs.vm_id }} || true
